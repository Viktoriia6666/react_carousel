{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleSwipeClick","step","props","images","frameSize","lastInd","length","nextInd","setState","this","itemWidth","animationDuration","infinity","prevDisabled","nextDisabled","className","style","width","transition","map","img","ind","transform","src","alt","type","disabled","onClick","Component","App","setWidth","event","target","value","setFrameSize","setStep","setAnimationDuration","setInfinity","checked","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.577fa513.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n};\n\ntype State = {\n  itemIndex: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    itemIndex: 0,\n  };\n\n  handleSwipeClick = (step: number) => () => {\n    const { images, frameSize } = this.props;\n    const { itemIndex } = this.state;\n    const firstInd = 0;\n    const lastInd = images.length - frameSize;\n\n    let nextInd = itemIndex + step;\n\n    if (step > 0 && nextInd > lastInd) {\n      nextInd = lastInd;\n    }\n\n    if (step < 0 && nextInd < firstInd) {\n      nextInd = firstInd;\n    }\n\n    this.setState(() => ({\n      itemIndex: nextInd,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinity,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, ind) => (\n            <li\n              key={img}\n              className=\"Carusel__item\"\n              style={{\n                transform: `translateX(${-itemIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img src={img} alt={`${ind + 1}`} width={itemWidth} />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__button\">\n          <button\n            type=\"button\"\n            className=\"Carousel__btn\"\n            disabled={prevDisabled}\n            onClick={this.handleSwipeClick(-step)}\n          >\n            &#8678;\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__btn\"\n            disabled={nextDisabled}\n            onClick={this.handleSwipeClick(step)}\n          >\n            &#8680;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinity: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          Carousel\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setWidth}\n          />\n        </label>\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n        <label\n          htmlFor=\"animationId\"\n          className=\"label\"\n        >\n          AnimationDuration:\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </label>\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinite:\n          <input\n            type=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.setInfinity}\n          />\n        </label>\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}